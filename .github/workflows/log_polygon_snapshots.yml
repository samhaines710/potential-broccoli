name: Log Polygon Option Snapshots (CSV)

on:
  workflow_dispatch: {}
  schedule:
    # Mon–Fri, 13:25–20:05 UTC (15:25–22:05 SAST) every 5 minutes kickoff (job loops internally)
    - cron: "25 13 * * 1-5"
    - cron: "30 14 * * 1-5"
    - cron: "30 15 * * 1-5"
    - cron: "30 16 * * 1-5"
    - cron: "30 17 * * 1-5"
    - cron: "30 18 * * 1-5"
    - cron: "30 19 * * 1-5"
    - cron: "5 20 * * 1-5"

jobs:
  log-snapshots:
    runs-on: ubuntu-latest
    env:
      OUT_DIR: polygon_live_csv
      DURATION_MIN: 60               # job-local loop runtime; adjust if desired
      POLL_SECONDS: 20
      NEAR_ATM_PCT: "0.05"           # set "0" to disable ATM filter
      MAX_EXPIRES: "0"               # disable expiry filter by default
      TICKERS: "AAPL,MSFT,NVDA,AMZN,META,NFLX,GOOG,TSLA,IBIT"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assert POLYGON_API_KEY present
        run: |
          test -n "${{ secrets.POLYGON_API_KEY }}" || { echo "POLYGON_API_KEY secret missing"; exit 1; }
        shell: bash

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Verify logger exists
        run: |
          set -euo pipefail
          test -f "scripts/log_polygon_option_snapshots_csv.py" || { echo "Missing scripts/log_polygon_option_snapshots_csv.py"; exit 1; }

      - name: Prepare output dir
        run: |
          rm -rf "${OUT_DIR}" || true
          mkdir -p "${OUT_DIR}"

      - name: Run live logger loop
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          OUT_DIR: ${{ env.OUT_DIR }}
          POLL_SECONDS: ${{ env.POLL_SECONDS }}
          DURATION_MIN: ${{ env.DURATION_MIN }}
          NEAR_ATM_PCT: ${{ env.NEAR_ATM_PCT }}
          MAX_EXPIRES: ${{ env.MAX_EXPIRES }}
          TICKERS: ${{ env.TICKERS }}
        run: |
          set -euo pipefail
          python scripts/log_polygon_option_snapshots_csv.py \
            --out "${OUT_DIR}" \
            --poll "${POLL_SECONDS}" \
            --atm "${NEAR_ATM_PCT}" \
            --exp "${MAX_EXPIRES}"

      - name: Sanity check: sample rows & zero/NaN scan
        run: |
          set -euo pipefail
          python - <<'PY'
          import csv, glob, os, sys
          files = sorted(glob.glob("${OUT_DIR}/**/*.csv", recursive=True))
          print("FILES", len(files))
          bad = 0
          show = 5
          for f in files[-5:]:
            print("----", f)
            with open(f, newline="", encoding="utf-8") as fh:
              r = csv.DictReader(fh)
              i = 0
              for row in r:
                if i < show:
                  print({k: row[k] for k in list(row)[:10]})
                # cheap NaN/empty check on critical fields
                if row.get("contract_symbol") in ("", None):
                  bad += 1
                i += 1
          print("BAD_ROWS", bad)
          PY

      - name: Upload CSVs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: polygon_snapshots_csv
          path: ${{ env.OUT_DIR }}
          retention-days: 14